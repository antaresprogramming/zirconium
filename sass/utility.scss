.flex {
    display    : flex;
    flex-wrap  : wrap;
    align-items: center;
    gap        : 1em;
}

.grid {
    --padding: calc(var(--space, 0.5em) * 4);
    display  : grid;
    gap      : var(--space, 0.5em);
    padding  : var(--padding, 4em);
}

.multicolumn {
    column-gap: 2em;
}

.multicolumn.ruled {
    column-rule: 1px solid var(--bg-1);
}

@for $index from 2 through 6 {
    .columns-#{$index} {
        column-count: $index;
    }
}

.section {
    padding: 1em;
}

.section+.section {
    margin-top: 1em;
}

.page {
    width : 90%;
    margin: auto;
}

@media (min-width: 75%) {
    .page {
        width: 75%;
    }
}

.visually-hidden {
    border     : 0;
    clip       : rect(0 0 0 0);
    height     : auto;
    margin     : 0;
    overflow   : hidden;
    padding    : 0;
    position   : absolute;
    white-space: nowrap;
    width      : 1px;
}

/* ASPECT RATIOS */
.square {
    aspect-ratio: 1;
}

.landscape {
    aspect-ratio: 16/9;
}

.portrait {
    aspect-ratio: 9/16
}

/* SHADOWS */
.shadow,
.raised {
    box-shadow: var(--shadow, var(--shadow-1));
    --shadow  : var(--shadow-1);
    --shadow-1: 0 4px 8px var(--shadow-color, #0003);
    --shadow-2: 0 8px 16px var(--shadow-color, #0003);
    --shadow-3: 0 16px 32px var(--shadow-color, #0004);
    --shadow-4: 0 32px 64px var(--shadow-color, #0005);
}

.shadow.level-2,
.raised.level-2 {
    --shadow: var(--shadow-2);
}

.shadow.level-3,
.raised.level-3 {
    --shadow: var(--shadow-3);
}

.shadow.level-4,
.raised.level-4 {
    --shadow: var(--shadow-4);
}

.raised.primary {
    --shadow-color: var(--bubblegum-100);
}

.raised.accent {
    --shadow-color: var(--blueberry-100);
}

@media (prefers-color-scheme: dark) {
    .raised.primary {
        --shadow-color: var(--bubblegum-900);
    }

    .raised.accent {
        --shadow-color: var(--blueberry-900);
    }
}

.spaced {
    justify-content: space-between;
}

.lowercase {
    text-transform: lowercase;
}

.uppercase {
    text-transform: uppercase;
}

.responsive-grid {
    display              : grid;
    gap                  : var(--space, --space-s);
    padding              : var(--space, --space-s);
    grid-template-columns: repeat(auto-fill, minmax(var(--column-size, 200px), 1fr));
}

.responsive-flex {
    display  : flex;
    gap      : var(--space, --space-s);
    padding  : var(--space, --space-s);
    flex-wrap: wrap;

    &>* {
        flex: 1 0 var(--column-size, 12em);
    }
}

.center-aligned {
    align-items: center;
}

.end-aligned {
    align-items: end;
}

.start-aligned {
    align-items: start;
}

.center-justified {
    justify-items: center;
}

.end-justified {
    justify-items: end;
}

.start-justified {
    justify-items: start;
}

.end-self-justified {
    justify-self: end;
}

.center-self-justified {
    justify-self: center;
}

.start-self-justified {
    justify-self: start;
}

.end-self-aligned {
    align-self: end;
}

.center-self-aligned {
    align-self: center;
}

.start-self-aligned {
    align-self: start;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.text-center {
    text-align: center;
}

.text-justified {
    text-align: justify
}

.text-end {
    text-align: end;
}

.text-start {
    text-align: start;
}

.sans {
    font-family: var(--font-sans);
}

.serif {
    font-family: var(--font-serif);
}

.mono {
    font-family: var(--font-mono);
}

.bordered {
    border: 1px solid var(--bg-1);
}

/*
 * SIZE UTILITIES
 * paddings and margins use `em`. Resizing font size will resize them too. 
 */
.small {
    font-size: 0.8em;
}

.large {
    font-size: 1.25em;
}

.circle {
    aspect-ratio : 1;
    border-radius: 100%;
    min-width: 6em
}

.padding {
    &-xs {
        padding: var(--space-xs);
    }

    &,
    &-s {
        padding: var(--space-s);
    }

    &-m {
        padding: var(--space-m);
    }

    &-l {
        padding: var(--space-l);
    }

    &-left {
        &-xs {
            padding-left: var(--space-xs);
        }

        &,
        &-s {
            padding-left: var(--space-s);
        }

        &-m {
            padding-left: var(--space-m);
        }

        &-l {
            padding-left: var(--space-l);
        }
    }

    &-right {
        &-xs {
            padding-right: var(--space-xs);
        }

        &,
        &-s {
            padding-right: var(--space-s);
        }

        &-m {
            padding-right: var(--space-m);
        }

        &-l {
            padding-right: var(--space-l);
        }
    }

    &-top {
        &-xs {
            padding-top: var(--space-xs);
        }

        &,
        &-s {
            padding-top: var(--space-s);
        }

        &-m {
            padding-top: var(--space-m);
        }

        &-l {
            padding-top: var(--space-l);
        }
    }

    &-bottom {
        &-xs {
            padding-bottom: var(--space-xs);
        }

        &,
        &-s {
            padding-bottom: var(--space-s);
        }

        &-m {
            padding-bottom: var(--space-m);
        }

        &-l {
            padding-bottom: var(--space-l);
        }
    }
}

.margin {
    &-xs {
        margin: var(--space-xs);
    }

    &,
    &-s {
        margin: var(--space-s);
    }

    &-m {
        margin: var(--space-m);
    }

    &-l {
        margin: var(--space-l);
    }

    &-left {
        &-xs {
            margin-left: var(--space-xs);
        }

        &,
        &-s {
            margin-left: var(--space-s);
        }

        &-m {
            margin-left: var(--space-m);
        }

        &-l {
            margin-left: var(--space-l);
        }
    }

    &-right {
        &-xs {
            margin-right: var(--space-xs);
        }

        &,
        &-s {
            margin-right: var(--space-s);
        }

        &-m {
            margin-right: var(--space-m);
        }

        &-l {
            margin-right: var(--space-l);
        }
    }

    &-top {
        &-xs {
            margin-top: var(--space-xs);
        }

        &,
        &-s {
            margin-top: var(--space-s);
        }

        &-m {
            margin-top: var(--space-m);
        }

        &-l {
            margin-top: var(--space-l);
        }
    }

    &-bottom {
        &-xs {
            margin-bottom: var(--space-xs);
        }

        &,
        &-s {
            margin-bottom: var(--space-s);
        }

        &-m {
            margin-bottom: var(--space-m);
        }

        &-l {
            margin-bottom: var(--space-l);
        }
    }
}